{
  Copyright 2006 Michalis Kamburelis.

  This file is part of "Kambi VRML game engine".

  "Kambi VRML game engine" is free software; see the file COPYING.txt,
  included in this distribution, for details about the copyright.

  "Kambi VRML game engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ This is a simple demo of TExamineCamera class.
  As you can see, in the simplest case you just
  - use TGLUIWindow class
  - init Glw.Camera at the beginning of your program
  - call glLoadMatrix(glw.Camera.Matrix) at the beginning of your Draw.

  And user instantly gets the ability to move and rotate the object
  by arrow keys, mouse etc. (see view3dscene keys is "Examine" mode:
  [http://vrmlengine.sourceforge.net/view3dscene.php]).
}

program demo_camera;

{$apptype GUI}

uses VectorMath, Boxes3d, GL, GLU, GLExt, GLWindow,
  KambiClassUtils, KambiUtils, SysUtils, Classes,
  KambiGLUtils, Cameras, KambiFilesUtils;

var
  Glw: TGLUIWindow;

procedure Draw(glwin: TGLWindow);
begin
  glClear(GL_COLOR_BUFFER_BIT or GL_DEPTH_BUFFER_BIT);
  glLoadMatrix(glw.Camera.Matrix);

  DrawGLBox(-1, -1, -1, 1, 1, 1, 0, 0, 0, true, false);
end;

procedure Init(glwin: TGLWindow);
begin
  glEnable(GL_LIGHTING);
  glEnable(GL_LIGHT0);
  glEnable(GL_DEPTH_TEST);
end;

procedure Resize(glwin: TGLWindow);
begin
  glViewport(0, 0, glwin.Width, glwin.Height);
  ProjectionGLPerspective(45.0, glwin.Width/glwin.Height, 0.1, 100);
end;

begin
  Glw := TGLUIWindow.Create(Application);

  { init Glw.Camera }
  Glw.Camera := TExamineCamera.Create(Glw);
  Glw.ExamineNav.Init(Box3d(
    Vector3Single(-1, -1, -1),
    Vector3Single( 1,  1,  1)));

  Glw.OnInit := @Init;
  Glw.OnResize := @Resize;
  Glw.InitAndRun(ProgramName, @Draw);
end.
