{
  Copyright 2003-2011 Michalis Kamburelis.

  This file is part of "Kambi VRML game engine".

  "Kambi VRML game engine" is free software; see the file COPYING.txt,
  included in this distribution, for details about the copyright.

  "Kambi VRML game engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Simple converter from 3DS, Collada, and every other 3D format to VRML / X3D.
  Can also process VRML/X3D -> VRML/X3D, in which case it's useful as a converter
  between X3D encodings (classic vs xml) and as a pretty-printer.

  Reads a 3D model from the filename given as command-line parameter
  ('-' means stdin), and outputs model as VRML/X3D to stdout.

  Can be used instead of view3dscene --write-to-vrml parameter.
  This way you don't need e.g. OpenGL libraries (that are required
  to run view3dscene) installed on your system.

  For your own uses, you can easily extend this to process VRML/X3D graph.
  For example, add or remove some nodes. See TVRMLNode methods.
}

program tovrmlx3d;

uses SysUtils, KambiUtils, KambiClassUtils, VRMLNodes, Object3DAsVRML;

var
  Node: TVRMLNode;
begin
  Parameters.CheckHigh(1);
  Node := LoadVRML(Parameters[1], true);
  try
    SaveVRMLClassic(Node, StdOutStream,
      'Generated by tovrmlx3d by Kambi from ' + ExtractFileName(Parameters[1]));
  finally FreeAndNil(Node) end;
end.
