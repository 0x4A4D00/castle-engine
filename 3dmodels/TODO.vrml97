VRML 97 TODO items:

----------------------------------------
Post view3dscene 2.0 things:

- finish checking NIST tests

- Remaining places where my code temporarily cannot handle VRML 2.0 files,
  should be updated:

  - Ray-tracer: vrmlraytracer.pas: PathTracerTo1st uses only
    VRML 1.0 material node.
    Fixing this means also porting VRML extension on
    /win/mojewww/camelot/kambi_vrml_extensions.php
    "Phong's BRDF fields for materials" to VRML 2.0 Material.

  - Conversion from other 3D formats (make 3DS -> VRML 2.0 converter):
    ./object3dasvrml.pas
    (grep for _1 where I used only VRML 1.0 nodes versions)

    Fix WWW pages on camelot then (grep for VRML 1.0...),
    they say that convertion only to VRML 1.0 is available.
    And on freshmeat.

    Also fix appropriate section in vrml_engine_doc.

  - "The Castle":
    vrmlscenewaypoints.pas:
      now uses ParentNodes, should also include ParentFields ?
      Same for CastleLevel.
    castledebugmenu: fix to use also VRML 97 version of SpotLight_2
      (it uses beamWidth)
    make test level in VRML 2.0 for castle
    fix castle-development.php page, see TODO item there.
    planned for September 2006.

- change FreeRemovingFromAllParentNodes to also remove from ParentFields,
  rename back to FreeRemovingFromAllParents.

- KambiTriangulation should also be fixed just like DirectionalLight.
  Or maybe it should be made a new field of Apperance ?

- kambi_vrml_examples: do VRML 2.0 counterpart of all useful VRML 1.0 tests.
  Remaining sensible things to translate are:
  castle.wrl, house_behind_the_glass.wrl, materials.wrl.

  Start of castle is in kambi
  /win/3dmodels/vrml/kambi_vrml_examples.private/castle_vrml97_export
  looks too bad for public --- various small problems.
  For now I'll include VRML 1.0 version.

----------------------------------------
- Implement Prototypes, Event routing. Relevant spec parts:
  - 4.2.4 Prototypes
  - 4.2.5 Event routing
  - 4.3.2 Statements
    After the required header, a VRML file may contain any
    combination of the following:
    1. Any number of PROTO or EXTERNPROTO statements
    (see 4.8, Prototype semantics);
    ...
    4. Any number of ROUTE statements (see 4.10.2, Route semantics).
  - 4.3.3 Node statement syntax
    A node's body consists of any number of ..., IS statements,
    ROUTE statements, PROTO statements or EXTERNPROTO statements, in any order.
  - 4.3.5 PROTO statement syntax
  - 4.3.6 IS statement syntax
  - 4.3.7 EXTERNPROTO statement syntax
  - 4.3.9 ROUTE statement syntax

- 4.5.4 Scripting language protocols
----------------------------------------
- Check what nodes are allowed where:
  - Root nodes shall be children nodes (see 4.6.5, Grouping and children nodes).
----------------------------------------
- Resolving url fields (MFString, see 4.5.2, 4.5.3).
  Use Synapse or curl (probably both, by compile-time define;
  make the URL system "pluggable", by default "null" system is plugged
  so neither Synapse nor curl is used.).
  Or lnet.
  Yes, this definitely must be "pluggable" to allow various
  network libraries to plug there ..

----------------------------------------
- 4.6.7 Sensor nodes
  ...
  and further 4.x spec parts, with the exception of 4.13, 4.14

----------------------------------------