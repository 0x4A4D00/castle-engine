{
  Copyright 2003-2008 Michalis Kamburelis.

  This file is part of "Kambi VRML game engine".

  "Kambi VRML game engine" is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  "Kambi VRML game engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with "Kambi VRML game engine"; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

  ----------------------------------------------------------------------------
}

{ A simple extension of simplest_vrml_browser.pasprogram,
  registers handles for compiled: Script protocol.

  Run with $1 = 3D model to load.

  For sample of "compiled:" Script working, run as
    vrml_browser_script_compiled ../../../kambi_vrml_test_suite/x3d/simple_script_tests.x3dv
}

program vrml_browser_script_compiled;

{$apptype CONSOLE}

uses KambiUtils, GLWindowVRMLBrowser, ProgressUnit, ProgressConsole,
  VRMLScene, VRMLErrors, VRMLFields, VRMLTime, SysUtils;

var
  BrowserWindow: TGLWindowVRMLBrowser;

type
  THelperObj = class
    class procedure ScriptTouchInitialize(Value: TVRMLField; const Time: TVRMLTime);
    class procedure ScriptTouch(Value: TVRMLField; const Time: TVRMLTime);
  end;

{ THelperObj.Script* methods below are only to demonstrate using
  "compiled:" Script protocol, see
  [http://vrmlengine.sourceforge.net/kambi_vrml_extensions.php#section_ext_script_compiled]. }
class procedure THelperObj.ScriptTouchInitialize(Value: TVRMLField; const Time: TVRMLTime);
begin
  Writeln(Format('Script is initialized (timestamp: %f)', [Time.Seconds]));
end;

class procedure THelperObj.ScriptTouch(Value: TVRMLField; const Time: TVRMLTime);
begin
  Writeln(Format('Touch! (timestamp: %f)', [Time.Seconds]));
end;

begin
  Parameters.CheckHigh(1);

  VRMLWarning := @VRMLWarning_Write;
  Progress.UserInterface := ProgressConsoleInterface;

  BrowserWindow := TGLWindowVRMLBrowser.Create;
  try
    BrowserWindow.Load(Parameters[1]);

    Writeln(BrowserWindow.Scene.Info(true, true, false));

    { initialize events procesing }
    BrowserWindow.Scene.RegisterCompiledScript('touch_initialize',
      @THelperObj(nil).ScriptTouchInitialize);
    BrowserWindow.Scene.RegisterCompiledScript('touch',
      @THelperObj(nil).ScriptTouch);

    BrowserWindow.Scene.Spatial := [ssRendering, ssDynamicCollisions];
    BrowserWindow.Scene.ProcessEvents := true;

    BrowserWindow.InitLoop;
  finally BrowserWindow.Free end;
end.
