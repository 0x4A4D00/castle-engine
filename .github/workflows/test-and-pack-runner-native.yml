# ----------------------------------------------------------------------------
# GitHub Action workflow to
#
# - test CGE compilation and automatic tests
# - pack CGE into zip
#
# on some platforms for which
#
# - we don't use Docker
# - we don't use cross-compilation from other platform
# - we just use a runner with the given platform - self-hosted or GH hosted.
# ----------------------------------------------------------------------------

name: Test and Pack (Runner Native)

# Called by everything.yml
on: [workflow_call]
#on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  test_and_pack:
    name: Test and Pack
    strategy:
      matrix:

        # TODO: Fix for windows-latest (GH hosted), now fails with:
        #    tools/build-tool/castle-engine_compile.sh
        #    Windows Subsystem for Linux has no installed distributions.
        # https://github.com/castle-engine/castle-engine/runs/6219455015?check_suite_focus=true
        #
        # TODO: Fix for macos-latest: it randomly fails because of timeouts
        # (e.g. https://github.com/castle-engine/castle-engine/actions/runs/2771175624 )
        # Looks like GH hosted macOS runner is just too busy.

        runner: [macos_x64, ubuntu-latest, windows-latest, macos-latest]
        # To not overload the slower RPi, use it only with master
        include:
          - if: ${{ github.ref == 'refs/heads/master' }}
            runner: raspberry_pi_64
          - if: ${{ github.ref == 'refs/heads/master' }}
            runner: raspberry_pi_32
    runs-on: ${{ matrix.runner }}
    steps:
    - uses: actions/checkout@v4

    - name: Install FPC+Lazarus
      # On GH hosted runners, install FPC+Lazarus
      if: ${{ matrix.runner == 'ubuntu-latest' || matrix.runner == 'macos-latest' || matrix.runner == 'windows-latest'}}
      uses: gcarreno/setup-lazarus@v3.2.17
      with:
        lazarus-version: stable
    - name: Install Ubuntu dependencies
      if: ${{ matrix.runner == 'ubuntu-latest' }}
      run: sudo apt-get --no-install-recommends -y install libgl-dev
    - name: Install macOS dependencies
      if: ${{ matrix.runner == 'macos-latest' }}
      run: brew install gnu-sed coreutils

    - name: Set environment CASTLE_ENGINE_PATH
      run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
    - name: Set environment PATH
      run: echo "PATH=${PATH}:${CASTLE_ENGINE_PATH}/installed/bin/" >> $GITHUB_ENV
    - name: Set environment FPC_OS
      run: echo "FPC_OS="`fpc -iTO` >> $GITHUB_ENV
    - name: Set environment FPC_CPU
      run: echo "FPC_CPU="`fpc -iTP` >> $GITHUB_ENV
    - name: Disable FPC version check (RPi 64)
      if: ${{ matrix.runner == 'raspberry_pi_64' }}
      run: echo "CASTLE_PACK_DISABLE_FPC_VERSION_CHECK=true" >> $GITHUB_ENV

    # check versions (and availability) of our requirements early

    - name: (Info) FPC version
      run: fpc -iV
    - name: (Info) Lazarus version
      run: lazbuild --version
    - name: (Info) Make version
      run: make --version

    - name: Build Tools
      run: |
        rm -Rf installed/
        mkdir -p installed/
        make clean tools install PREFIX=${CASTLE_ENGINE_PATH}/installed/

    - name: Build Examples
      # Too slow on RPi
      if : ${{ matrix.runner != 'raspberry_pi_64' && matrix.runner != 'raspberry_pi_32' }}
      run: make clean examples CASTLE_CONSERVE_DISK_SPACE=true

    - name: Build And Run Auto-Tests
      run: make tests

    - name: Build Using FpMake
      # Too slow on RPi
      # On macOS: we don't have fpmake "opengl" package ok after installing on macOS using fpcupdeluxe?
      # So this never executes now...
      if : ${{ matrix.runner != 'raspberry_pi_64' && matrix.runner != 'raspberry_pi_32' && matrix.runner != 'macos_x64'}}
      run: make clean test-fpmake

    - name: Build Lazarus Packages
      run: |
        lazbuild packages/castle_base.lpk
        lazbuild packages/castle_window.lpk
        lazbuild packages/castle_components.lpk
        lazbuild packages/castle_editor_components.lpk
        lazbuild packages/alternative_castle_window_based_on_lcl.lpk

    - name: Build and Install PasDoc
      run: |
        wget https://github.com/pasdoc/pasdoc/archive/refs/heads/master.zip --output-document pasdoc-master.zip
        unzip pasdoc-master.zip
        cd pasdoc-master
        make
        mv bin/pasdoc ${CASTLE_ENGINE_PATH}/installed/bin/

    - name: Pack Release
      run: |
        rm -f castle-engine*.zip # remove previous artifacts
        ./tools/internal/pack_release/pack_release.sh ${FPC_OS} ${FPC_CPU}

    - name: Install InnoSetup
      if: ${{ matrix.runner == 'windows-latest' }}
      run: choco install innosetup
    - name: Download bundled FPC
      if: ${{ matrix.runner == 'windows-latest' }}
      uses: robinraju/release-downloader@v1.10
      with:
        repository: "castle-engine/cge-fpc"
        latest: true
        fileName: "fpc-win64-x86_64.zip"
    - name: Pack Release (Windows Installer, Bundled FPC)
      if: ${{ matrix.runner == 'windows-latest' }}
      run: CGE_PACK_BUNDLE=yes ./tools/internal/pack_release/pack_release.sh windows_installer

    - name: Archive Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.runner }}-release
        path: |
          "castle-engine*.zip"
          "castle-engine-setup-*.exe"
        if-no-files-found: error
