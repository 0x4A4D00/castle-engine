{ -*- buffer-read-only: t -*-

  Copyright 2018-2022 Michalis Kamburelis.

  This file is part of "Castle Game Engine".

  "Castle Game Engine" is free software; see the file COPYING.txt,
  included in this distribution, for details about the copyright.

  "Castle Game Engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Automatically generated wrapper to make vectors/colors persistent.

  Do not edit this file manually!
  Instead
  - edit tools/internal/generate-persistent-vectors/persistent_vectors_input.txt
  - and run generate-persistent-vectors in that directory.
}

{$ifdef read_interface_class}
strict private
  FAnchorPointPersistent: TCastleVector3Persistent;
  function GetAnchorPointForPersistent: TVector3;
  procedure SetAnchorPointForPersistent(const AValue: TVector3);
published
  { @link(AnchorPoint) that can be visually edited in
    Castle Game Engine Editor, Lazarus and Delphi.
    Normal user code does not need to deal with this,
    instead read or write @link(AnchorPoint) directly.

    @seealso AnchorPoint }
  property AnchorPointPersistent: TCastleVector3Persistent read FAnchorPointPersistent ;
{$endif read_interface_class}

{$ifdef read_implementation_methods}
function TJointFixed.GetAnchorPointForPersistent: TVector3;
begin
  Result := AnchorPoint;
end;

procedure TJointFixed.SetAnchorPointForPersistent(const AValue: TVector3);
begin
  AnchorPoint := AValue;
end;
{$endif read_implementation_methods}

{$ifdef read_implementation_constructor}
  FAnchorPointPersistent := TCastleVector3Persistent.Create;
  FAnchorPointPersistent.InternalGetValue := {$ifdef FPC}@{$endif}GetAnchorPointForPersistent;
  FAnchorPointPersistent.InternalSetValue := {$ifdef FPC}@{$endif}SetAnchorPointForPersistent;
  FAnchorPointPersistent.InternalDefaultValue := AnchorPoint; // current value is default
{$endif read_implementation_constructor}

{$ifdef read_implementation_destructor}
  FreeAndNil(FAnchorPointPersistent);
{$endif read_implementation_destructor}

