{ -*- buffer-read-only: t -*-

  Copyright 2015-2020 Michalis Kamburelis.

  This file is part of "Castle Game Engine".

  "Castle Game Engine" is free software; see the file COPYING.txt,
  included in this distribution, for details about the copyright.

  "Castle Game Engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Automatically generated node properties.

  Do not edit this file manually!
  To add new properties:
  - add them to the text files in tools/internal/x3d-nodes-to-pascal/nodes-specification/ ,
  - and regenerate include files by running x3d-nodes-to-pascal .

  The documentation for properties should go to x3dnodes_documentation.txt . }

{$ifdef read_interface}

  strict private
{$ifndef CASTLE_SLIM_NODES}
    function GetBBox: TBox3D;
    procedure SetBBox(const Value: TBox3D);
{$endif not CASTLE_SLIM_NODES}
{$ifndef CASTLE_SLIM_NODES}
    function GetOctreeTriangles: TKambiOctreePropertiesNode;
    procedure SetOctreeTriangles(const Value: TKambiOctreePropertiesNode);
{$endif not CASTLE_SLIM_NODES}
    function GetRender: Boolean;
    procedure SetRender(const Value: Boolean);
  public
{$ifndef CASTLE_SLIM_NODES}
    { X3D fields "bboxCenter" and "bboxSize" are get/set as TBox3D. } { }
    property BBox: TBox3D read GetBBox write SetBBox;
{$endif not CASTLE_SLIM_NODES}
{$ifndef CASTLE_SLIM_NODES}
    { X3D field "octreeTriangles". } { }
    property OctreeTriangles: TKambiOctreePropertiesNode read GetOctreeTriangles write SetOctreeTriangles;
{$endif not CASTLE_SLIM_NODES}
    { X3D field "render". } { }
    property Render: Boolean read GetRender write SetRender;

{$endif read_interface}

{$ifdef read_implementation}

{ TAbstractShapeNode ----------------------------------------------- }

{$ifndef CASTLE_SLIM_NODES}
function TAbstractShapeNode.GetBBox: TBox3D;
begin
  Result := TBox3D.FromCenterSize(FdBBoxCenter.Value, FdBBoxSize.Value);
end;

procedure TAbstractShapeNode.SetBBox(const Value: TBox3D);
var
  ValueCenter, ValueSize: TVector3;
begin
  Value.ToCenterSize(ValueCenter, ValueSize);
  FdBBoxCenter.Send(ValueCenter);
  FdBBoxSize.Send(ValueSize);
end;

{$endif not CASTLE_SLIM_NODES}
{$ifndef CASTLE_SLIM_NODES}
function TAbstractShapeNode.GetOctreeTriangles: TKambiOctreePropertiesNode;
begin
  if FdOctreeTriangles.Value is TKambiOctreePropertiesNode then
    Result := TKambiOctreePropertiesNode(FdOctreeTriangles.Value)
  else
    Result := nil;
end;

procedure TAbstractShapeNode.SetOctreeTriangles(const Value: TKambiOctreePropertiesNode);
begin
  FdOctreeTriangles.Send(Value);
end;

{$endif not CASTLE_SLIM_NODES}
function TAbstractShapeNode.GetRender: Boolean;
begin
  Result := FdRender.Value;
end;

procedure TAbstractShapeNode.SetRender(const Value: Boolean);
begin
  FdRender.Send(Value);
end;

{$endif read_implementation}
