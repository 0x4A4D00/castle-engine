In this directory you can find a couple of Lazarus packages that allow
to easily use my units in Lazarus programs.

----------------------------------------
I. Packages without components:

Usage:

  1. Open wanted kambi_*.lpk file in Lazarus and compile the package.

  2. When you want to use the units included in kambi_xxx.lpk
     in your program, just add this kambi_xxx package
     as a "Required Package" for your project
     (using "Project" -> "Project Inspector" dialog).

     That's it. Lazarus will automatically take care of such things as
     recompiling the units in the package when needed (and with
     proper command-line options) or adding
     appropriate -Fu command-line options for FPC so that FPC
     "sees" units in the package when compiling your program.

What kambi_*.lpk packages are *not*:

  These are only useful to compile my units and use them nicely and cleanly
  in your Lazarus programs. This is not needed if you don't use
  Lazarus. Units in this directory don't use any Lazarus units,
  so you don't need to have Lazarus to compile and run them.
  You need only FPC. If you don't want to use Lazarus with my units,
  use ../Makefile to compile all units and use compile.sh scripts
  to compile each particular program. If you need more flexibility,
  take a look at ../../kambi.cfg, this specifies actual options
  used by ../Makefile and all compile.sh scripts.

  These packages are *not* intended to be installed in Lazarus.
  You are supposed to simply use these packages in your programs.
  You could install them, but there's no reason and no benefit for this
  (no components will be registered etc.) --- unless you will also install
  kambi_components package.

Why there are a couple of packages --- kambi_units, kambi_glwindow etc. :

  Because some units do in their "initialization" and "finalization"
  sections some things that you *do not* want to be done in each
  program that uses my units.

  The base package is "kambi_units", this is "almost safe"
  package that doesn't do anything special in it's initialization:

  - OpenGLh unit loads OpenGL library, and fails if OpenGL is not available.
    On Win32 this also changes 8087 control word.

  - OpenAL, KambiZlib, KambiPng units load OpenAL, zlib, png
    libraries (but they don't fail if these libraries don't exist).

  The package "kambi_glwindow" includes GLWindow unit,
  which means that merely using this package will cause the program
  to initialize TGLWindowManager class --- this initiates some talk
  with WindowManager, GTK toolkit, etc. So use this package only
  if you really want to use GLWindow unit.

  The package "kambi_glwindow_navigated" includes GLW_Navigated unit,
  this actually creates TGLWindowNavigated instance in it's
  initialization section.

Some internal notes:

  Useful regexp when synching win32 version with unix version:
    From \.\./\.\./\([.a-z0-9A-Z]*\)/
    To ..\\..\\\1\\

  Remember to put subpaths unix/ and win32/ only in according version
  of the package.

----------------------------------------
II. Package with components (components/kambi_components package):

This is a "normal" Lazarus package, which means that it registers
some Lazarus components (that use my units), and you're supposed to just
install this package. This also automatically installs kambi_units
package --- that's OK.

Michalis