TBase3D design (abstract interface) is a little similar to TUIControl
(and even once was descending from TUIControl, although now it's not).
For example, it also has key, mouse events, etc.

But there are some fundamental differences between TBase3D and TUIControl:
TUIControl is designed to be on the managed list
(TGLUIWindow.Controls or TKamOpenGLControl.Controls).
TBase3D is designed to be in a tree (TBase3DList).

This makes some stuff really hard for TBase3D: e.g. TUIControl.GLContextInit
method, or getting TUIControl.ContainerResize events and having
TUIControl.Container reference. These would be difficult for TBase3D,
as they require handling notification when stuff is added to the list.
Hm, although we needed notification anyway after all, so it may be
possible to implement GLContextInit one day.

Also, for TBase3D, it would be a little unclean to have a reference
to containing list or scenemanager (although maybe one day it will be
needed anyway).

Also, some stuff makes less sense for TBase3D: PositionInside,
and generally getting MouseMove with window MouseX, MouseY coords.
